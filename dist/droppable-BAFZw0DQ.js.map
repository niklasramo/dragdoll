{"version":3,"file":"droppable-BAFZw0DQ.js","names":[],"sources":["../src/droppable/droppable.ts"],"sourcesContent":["import type { Rect, Writeable } from '../types.js';\n\nimport type { EventListenerId } from 'eventti';\n\nimport type { Draggable } from '../draggable/draggable.js';\n\nimport { Emitter } from 'eventti';\n\nexport type DroppableId = symbol | string | number;\n\nexport type DroppableAcceptId = string | number | symbol;\n\nexport const DroppableEventType = {\n  Destroy: 'destroy',\n} as const;\n\nexport type DroppableEventType = (typeof DroppableEventType)[keyof typeof DroppableEventType];\n\nexport interface DroppableEventCallbacks {\n  [DroppableEventType.Destroy]: () => void;\n}\n\nexport interface DroppableOptions {\n  id?: DroppableId;\n  accept?: DroppableAcceptId[] | ((draggable: Draggable<any>) => boolean);\n  data?: { [key: string]: any };\n}\n\nexport class Droppable {\n  readonly id: DroppableId;\n  readonly element: HTMLElement | SVGSVGElement;\n  accept: DroppableAcceptId[] | ((draggable: Draggable<any>) => boolean);\n  data: { [key: string]: any };\n  readonly isDestroyed: boolean;\n  protected _clientRect: Rect;\n  protected _emitter: Emitter<{\n    [K in keyof DroppableEventCallbacks]: DroppableEventCallbacks[K];\n  }>;\n\n  constructor(element: HTMLElement | SVGSVGElement, options: DroppableOptions = {}) {\n    const { id = Symbol(), accept = () => true, data = {} } = options;\n\n    this.id = id;\n    this.element = element;\n    this.accept = accept;\n    this.data = data;\n    this.isDestroyed = false;\n    this._clientRect = { x: 0, y: 0, width: 0, height: 0 };\n    this._emitter = new Emitter();\n\n    this.updateClientRect();\n  }\n\n  on<T extends keyof DroppableEventCallbacks>(\n    type: T,\n    listener: DroppableEventCallbacks[T],\n    listenerId?: EventListenerId,\n  ): EventListenerId {\n    return this._emitter.on(type, listener, listenerId);\n  }\n\n  off<T extends keyof DroppableEventCallbacks>(type: T, listenerId: EventListenerId): void {\n    this._emitter.off(type, listenerId);\n  }\n\n  getClientRect() {\n    return this._clientRect as Readonly<Rect>;\n  }\n\n  updateClientRect(rect?: Rect) {\n    const bcr = rect || this.element.getBoundingClientRect();\n    const { _clientRect } = this;\n    _clientRect.x = bcr.x;\n    _clientRect.y = bcr.y;\n    _clientRect.width = bcr.width;\n    _clientRect.height = bcr.height;\n  }\n\n  destroy() {\n    if (this.isDestroyed) return;\n    (this as Writeable<typeof this>).isDestroyed = true;\n\n    this._emitter.emit(DroppableEventType.Destroy);\n    this._emitter.off();\n  }\n}\n"],"mappings":"kCAYA,MAAa,EAAqB,CAChC,QAAS,UACV,CAcD,IAAa,EAAb,KAAuB,CAWrB,YAAY,EAAsC,EAA4B,EAAE,CAAE,CAChF,GAAM,CAAE,KAAK,QAAQ,CAAE,aAAe,GAAM,OAAO,EAAE,EAAK,EAE1D,KAAK,GAAK,EACV,KAAK,QAAU,EACf,KAAK,OAAS,EACd,KAAK,KAAO,EACZ,KAAK,YAAc,GACnB,KAAK,YAAc,CAAE,EAAG,EAAG,EAAG,EAAG,MAAO,EAAG,OAAQ,EAAG,CACtD,KAAK,SAAW,IAAI,EAEpB,KAAK,kBAAkB,CAGzB,GACE,EACA,EACA,EACiB,CACjB,OAAO,KAAK,SAAS,GAAG,EAAM,EAAU,EAAW,CAGrD,IAA6C,EAAS,EAAmC,CACvF,KAAK,SAAS,IAAI,EAAM,EAAW,CAGrC,eAAgB,CACd,OAAO,KAAK,YAGd,iBAAiB,EAAa,CAC5B,IAAM,EAAM,GAAQ,KAAK,QAAQ,uBAAuB,CAClD,CAAE,eAAgB,KACxB,EAAY,EAAI,EAAI,EACpB,EAAY,EAAI,EAAI,EACpB,EAAY,MAAQ,EAAI,MACxB,EAAY,OAAS,EAAI,OAG3B,SAAU,CACJ,KAAK,cACR,KAAgC,YAAc,GAE/C,KAAK,SAAS,KAAK,EAAmB,QAAQ,CAC9C,KAAK,SAAS,KAAK"}