import{getIntersectionRect as e,getIntersectionScore as t}from"./get-intersection-score-CvSlwByb.js";import{getRect as n}from"./get-rect-BRzLuevJ.js";import{CollisionDetector as r,createRect as i}from"./collision-detector-C_qir_i0.js";import{getStyle as a}from"./get-style-ZZHAkgcg.js";import{isDocument as o}from"./is-document-BQAkbLgN.js";const s=`visible`;function c(e,t,n=[]){let r=t?e:e?.parentNode;for(n.length=0;r&&!o(r);)if(r instanceof Element){let e=a(r);e.overflowY===s||e.overflowX===s||n.push(r),r=r.parentNode}else r=r instanceof ShadowRoot?r.host:r.parentNode;return n.push(window),n}let l;const u=i(),d={width:2**53-1,height:2**53-1,x:(2**53-1)*-.5,y:(2**53-1)*-.5},f=[],p=[],m=[],h=[];function g(e){if(!f.length){let t=e.drag?.items?.[0]?.dragContainer;t?c(t,!0,f):f.push(window)}}function _(e){p.length||c(e.element,!1,p)}function v(t,r=i()){i(t.length?n([t[0],`padding`],window):d,r);for(let a=1;a<t.length;a++){let o=t[a];if(!e(r,n([o,`padding`],window),r)){i(u,r);break}}return r}var y=class extends r{constructor(e,t){super(e),this._dragStates=new Map,this._visibilityLogic=t?.visibilityLogic||`relative`,this._listenersAttached=!1,this._clearCache=()=>this.clearCache()}_checkCollision(n,r,a){let o=this._dragStates.get(n);if(!o)return null;let s=n.getClientRect(),c=r.getClientRect();if(!s||!c)return null;let u=o.clipMaskKeyMap.get(r);if(!u){let e=this._visibilityLogic===`relative`;if(p.length=0,m.length=0,h.length=0,_(r),u=p[0]||window,o.clipMaskKeyMap.set(r,u),!o.clipMaskMap.has(u)){if(g(n),e){let e=window;for(let t of p)if(f.includes(t)){e=t;break}for(let t of f){if(t===e)break;m.push(t)}for(let t of p){if(t===e)break;h.push(t)}}else m.push(...f),h.push(...p);let t=e||!l?v(m):i(l),r=v(h);!e&&!l&&(l=t),o.clipMaskMap.set(u,[t,r])}p.length=0,m.length=0,h.length=0}let[d,y]=o.clipMaskMap.get(u)||[];if(!d||!y||!e(s,d,a.draggableVisibleRect)||!e(c,y,a.droppableVisibleRect)||!e(a.draggableVisibleRect,a.droppableVisibleRect,a.intersectionRect))return null;let b=t(a.draggableVisibleRect,a.droppableVisibleRect,a.intersectionRect);return b<=0?null:(a.droppableId=r.id,i(c,a.droppableRect),i(s,a.draggableRect),a.intersectionScore=b,a)}_sortCollisions(e,t){return t.sort((e,t)=>{let n=t.intersectionScore-e.intersectionScore;return n===0?e.droppableVisibleRect.width*e.droppableVisibleRect.height-t.droppableVisibleRect.width*t.droppableVisibleRect.height:n})}_createCollisionData(){let e=super._createCollisionData();return e.droppableVisibleRect=i(),e.draggableVisibleRect=i(),e}_getDragState(e){let t=this._dragStates.get(e);return t||(t={clipMaskKeyMap:new Map,clipMaskMap:new Map,cacheDirty:!0},this._dragStates.set(e,t),this._listenersAttached||=(window.addEventListener(`scroll`,this._clearCache,{capture:!0,passive:!0}),window.addEventListener(`resize`,this._clearCache,{passive:!0}),!0),t)}getCollisionDataPool(e){return this._getDragState(e),super.getCollisionDataPool(e)}removeCollisionDataPool(e){this._dragStates.delete(e)&&this._dndContext.drags.size<=0&&(this._listenersAttached&&=(window.removeEventListener(`scroll`,this._clearCache,{capture:!0}),window.removeEventListener(`resize`,this._clearCache),!1)),super.removeCollisionDataPool(e)}detectCollisions(e,t,n){f.length=0,l=null;let r=this._getDragState(e);r.cacheDirty&&=(r.clipMaskKeyMap.clear(),r.clipMaskMap.clear(),!1),super.detectCollisions(e,t,n),f.length=0,l=null}clearCache(e){if(e){let t=this._dragStates.get(e);t&&(t.cacheDirty=!0)}else this._dragStates.forEach(e=>{e.cacheDirty=!0})}};export{y as AdvancedCollisionDetector};
//# sourceMappingURL=advanced-collision-detector-BXyCbT9h.js.map