import{_ as s,c as n,o as a,a as e}from"./app.4d8b2c8a.js";const A=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[{"level":3,"title":"Node","slug":"node","link":"#node","children":[]},{"level":3,"title":"Browser","slug":"browser","link":"#browser","children":[]}]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"relativePath":"docs/getting-started.md","lastUpdated":1669154452000}'),l={name:"docs/getting-started.md"},o=e(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><p>DragDoll has two dependencies, <a href="https://github.com/niklasramo/eventti" target="_blank" rel="noreferrer">Eventti</a> and <a href="https://github.com/niklasramo/tikki" target="_blank" rel="noreferrer">Tikki</a>, both of which are lightweight and performant libraries. Eventti is used for emitting all the events and Tikki is used for managing the animation loop when necessary.</p><h3 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ npm install dragdoll eventti tikki</span></span>
<span class="line"></span></code></pre></div><h3 id="browser" tabindex="-1">Browser <a class="header-anchor" href="#browser" aria-hidden="true">#</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://cdn.jsdelivr.net/npm/eventti@3.0.0/dist/eventti.umd.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://cdn.jsdelivr.net/npm/tikki@2.0.0/dist/tikki.umd.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://cdn.jsdelivr.net/npm/dragdoll@0.0.2/dist/dragdoll.umd.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Access the library via <code>window.DragDoll</code> in browser context.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">PointerSensor</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">KeyboardSensor</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">Draggable</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">createPointerSensorStartPredicate</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dragdoll</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Let&#39;s assume that you have this element in DOM and you want to drag it</span></span>
<span class="line"><span style="color:#676E95;">// around.</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> element </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">.draggable</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// First we need to instantiate a new PointerSensor for the element, which</span></span>
<span class="line"><span style="color:#676E95;">// listens to DOM events and emits drag events for us to listen to. This does</span></span>
<span class="line"><span style="color:#676E95;">// not yet make the element move.</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> pointerSensor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PointerSensor</span><span style="color:#A6ACCD;">(element)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Let&#39;s also create a keyboard sensor.</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> keyboardSensor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">KeyboardSensor</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Next, let&#39;s make the element move based on the events the PointerSensor</span></span>
<span class="line"><span style="color:#676E95;">// and KeyboardSensor are emitting. Note that you can feed multiple sensors to</span></span>
<span class="line"><span style="color:#676E95;">// a single draggable instance.</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> draggable </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Draggable</span><span style="color:#A6ACCD;">([pointerSensor</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> keyboardSensor]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// Here we need to provide a function which returns an array of all the</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// elements that we want to move around based on the provided sensor&#39;s</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// events. In this case we just want to move the element which we are</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// monitoring.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">getElements</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> [element]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// Start predicate is a function which determines when the dragging should</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// start. There&#39;s a really good ready-made start predicate available for</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;">// PointerSensor, which we are using here.</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">startPredicate</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createPointerSensorStartPredicate</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// Now you should be able to drag the element around using mouse, touch or</span></span>
<span class="line"><span style="color:#676E95;">// keyboard.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// When you&#39;re done with your dragging needs you can destroy the sensor and</span></span>
<span class="line"><span style="color:#676E95;">// draggable.</span></span>
<span class="line"><span style="color:#A6ACCD;">draggable</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">destroy</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">pointerSensor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">destroy</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div>`,10),p=[o];function t(r,c,i,y,D,F){return a(),n("div",null,p)}const h=s(l,[["render",t]]);export{A as __pageData,h as default};
